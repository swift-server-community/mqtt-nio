{"primaryContentSections":[{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Version 2.0 of MQTTNIO added support for MQTT v5.0. To create a client that will connect to a v5 MQTT broker you need to set the version in the configuration as follows"}]},{"type":"codeListing","syntax":"swift","code":["let client = MQTTClient(","    host: host,","    identifier: \"MyAWSClient\",","    eventLoopGroupProvider: .createNew,","    configuration: .init(version: .v5_0)",")"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can then use the same functions available to the v3.1.1 client but there are also v5.0 specific versions of "},{"type":"codeVoice","code":"connect"},{"type":"text","text":", "},{"type":"codeVoice","code":"publish"},{"type":"text","text":", "},{"type":"codeVoice","code":"subscribe"},{"type":"text","text":", "},{"type":"codeVoice","code":"unsubscribe"},{"type":"text","text":" and "},{"type":"codeVoice","code":"disconnect"},{"type":"text","text":". These can be accessed via the variable "},{"type":"codeVoice","code":"MQTTClient.v5"},{"type":"text","text":". The v5.0 functions add support for MQTT properties in both function parameters and return types and the additional subscription parameters. For example here is a "},{"type":"codeVoice","code":"publish"},{"type":"text","text":" call adding the "},{"type":"codeVoice","code":"contentType"},{"type":"text","text":" property."}]},{"type":"codeListing","syntax":"swift","code":["_ = try await client.v5.publish(","    to: \"JSONTest\",","    payload: payload,","    qos: .atLeastOnce,","    properties: [.contentType(\"application\/json\")]",")"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Whoever subscribes to the “JSONTest” topic with a v5.0 client will also receive the "},{"type":"codeVoice","code":".contentType"},{"type":"text","text":" property along with the payload."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/mqttnio\/mqttnio-v5"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/org.swift-server-community.mqtt-nio\/documentation\/MQTTNIO\/mqttnio-v5","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"MQTTNIO support for MQTT v5 protocol."}],"kind":"article","metadata":{"roleHeading":"Article","title":"MQTT Version 5.0","role":"article","modules":[{"name":"MQTTNIO"}]},"hierarchy":{"paths":[["doc:\/\/org.swift-server-community.mqtt-nio\/documentation\/MQTTNIO"]]},"seeAlsoSections":[{"title":"Articles","identifiers":["doc:\/\/org.swift-server-community.mqtt-nio\/documentation\/MQTTNIO\/mqttnio-connections","doc:\/\/org.swift-server-community.mqtt-nio\/documentation\/MQTTNIO\/mqttnio-aws"],"generated":true}],"references":{"doc://org.swift-server-community.mqtt-nio/documentation/MQTTNIO":{"role":"collection","title":"MQTTNIO","abstract":[{"type":"text","text":"A Swift NIO based MQTT client"}],"identifier":"doc:\/\/org.swift-server-community.mqtt-nio\/documentation\/MQTTNIO","kind":"symbol","type":"topic","url":"\/documentation\/mqttnio"},"doc://org.swift-server-community.mqtt-nio/documentation/MQTTNIO/mqttnio-connections":{"role":"article","title":"Connections","abstract":[{"type":"text","text":"Support for TLS and WebSockets."}],"identifier":"doc:\/\/org.swift-server-community.mqtt-nio\/documentation\/MQTTNIO\/mqttnio-connections","kind":"article","type":"topic","url":"\/documentation\/mqttnio\/mqttnio-connections"},"doc://org.swift-server-community.mqtt-nio/documentation/MQTTNIO/mqttnio-aws":{"role":"article","title":"AWS IoT","abstract":[{"type":"text","text":"Using MQTTNIO with AWS IoT."}],"identifier":"doc:\/\/org.swift-server-community.mqtt-nio\/documentation\/MQTTNIO\/mqttnio-aws","kind":"article","type":"topic","url":"\/documentation\/mqttnio\/mqttnio-aws"}}}