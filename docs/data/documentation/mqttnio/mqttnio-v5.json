{"sections":[],"primaryContentSections":[{"content":[{"anchor":"overview","level":2,"text":"Overview","type":"heading"},{"inlineContent":[{"text":"Version 2.0 of MQTTNIO added support for MQTT v5.0. To create a client that will connect to a v5 MQTT broker you need to set the version in the configuration as follows","type":"text"}],"type":"paragraph"},{"code":["let client = MQTTClient(","    host: host,","    identifier: \"MyAWSClient\",","    eventLoopGroupProvider: .createNew,","    configuration: .init(version: .v5_0)",")"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"You can then use the same functions available to the v3.1.1 client but there are also v5.0 specific versions of ","type":"text"},{"type":"codeVoice","code":"connect"},{"type":"text","text":", "},{"code":"publish","type":"codeVoice"},{"type":"text","text":", "},{"code":"subscribe","type":"codeVoice"},{"text":", ","type":"text"},{"code":"unsubscribe","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"disconnect"},{"type":"text","text":". These can be accessed via the variable "},{"code":"MQTTClient.v5","type":"codeVoice"},{"text":". The v5.0 functions add support for MQTT properties in both function parameters and return types and the additional subscription parameters. For example here is a ","type":"text"},{"code":"publish","type":"codeVoice"},{"type":"text","text":" call adding the "},{"type":"codeVoice","code":"contentType"},{"text":" property.","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["_ = try await client.v5.publish(","    to: \"JSONTest\",","    payload: payload,","    qos: .atLeastOnce,","    properties: [.contentType(\"application\/json\")]",")"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Whoever subscribes to the “JSONTest” topic with a v5.0 client will also receive the "},{"type":"codeVoice","code":".contentType"},{"text":" property along with the payload.","type":"text"}]}],"kind":"content"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"hierarchy":{"paths":[["doc:\/\/org.swift-server-community.mqtt-nio\/documentation\/MQTTNIO"]]},"abstract":[{"text":"MQTTNIO support for MQTT v5 protocol.","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/org.swift-server-community.mqtt-nio\/documentation\/MQTTNIO\/mqttnio-v5"},"kind":"article","metadata":{"title":"MQTT Version 5.0","roleHeading":"Article","role":"article","modules":[{"name":"MQTTNIO"}]},"seeAlsoSections":[{"identifiers":["doc:\/\/org.swift-server-community.mqtt-nio\/documentation\/MQTTNIO\/mqttnio-connections","doc:\/\/org.swift-server-community.mqtt-nio\/documentation\/MQTTNIO\/mqttnio-aws"],"generated":true,"title":"Articles","anchor":"Articles"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/mqttnio\/mqttnio-v5"]}],"references":{"doc://org.swift-server-community.mqtt-nio/documentation/MQTTNIO":{"url":"\/documentation\/mqttnio","role":"collection","title":"MQTTNIO","abstract":[{"type":"text","text":"A Swift NIO based MQTT client"}],"identifier":"doc:\/\/org.swift-server-community.mqtt-nio\/documentation\/MQTTNIO","kind":"symbol","type":"topic"},"doc://org.swift-server-community.mqtt-nio/documentation/MQTTNIO/mqttnio-connections":{"identifier":"doc:\/\/org.swift-server-community.mqtt-nio\/documentation\/MQTTNIO\/mqttnio-connections","abstract":[{"type":"text","text":"Support for TLS, WebSockets, and Unix Domain Sockets."}],"type":"topic","url":"\/documentation\/mqttnio\/mqttnio-connections","kind":"article","title":"Connections","role":"article"},"doc://org.swift-server-community.mqtt-nio/documentation/MQTTNIO/mqttnio-aws":{"title":"AWS IoT","url":"\/documentation\/mqttnio\/mqttnio-aws","abstract":[{"type":"text","text":"Using MQTTNIO with AWS IoT."}],"kind":"article","type":"topic","role":"article","identifier":"doc:\/\/org.swift-server-community.mqtt-nio\/documentation\/MQTTNIO\/mqttnio-aws"}}}