{"metadata":{"symbolKind":"method","role":"symbol","extendedModule":"MQTTNIO","externalID":"s:7MQTTNIO10MQTTClientC7connect12cleanSession4will0C13ConfigurationS2b_SS9topicName_7NIOCore10ByteBufferV7payloadAA7MQTTQoSO3qosSb6retaintSgAC07ConnectG0VtYaKF","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"connect","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"cleanSession"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":", ","kind":"text"},{"text":"will","kind":"externalParam"},{"text":": (topicName","kind":"text"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":", payload","kind":"text"},{"kind":"text","text":": "},{"text":"ByteBuffer","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10ByteBufferV"},{"text":", qos","kind":"text"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7MQTTNIO7MQTTQoSO","text":"MQTTQoS"},{"text":", retain","kind":"text"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":")?, ","kind":"text"},{"text":"connectConfiguration","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7MQTTNIO10MQTTClientC20ConnectConfigurationV","text":"ConnectConfiguration"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"modules":[{"name":"MQTTNIO"}],"platforms":[{"beta":false,"deprecated":false,"introducedAt":"15.0","name":"iOS","unavailable":false},{"deprecated":false,"name":"iPadOS","beta":false,"unavailable":false,"introducedAt":"15.0"},{"beta":false,"unavailable":false,"deprecated":false,"introducedAt":"15.0","name":"Mac Catalyst"},{"deprecated":false,"introducedAt":"12.0","name":"macOS","beta":false,"unavailable":false},{"unavailable":false,"name":"tvOS","deprecated":false,"introducedAt":"15.0","beta":false},{"introducedAt":"8.0","deprecated":false,"unavailable":false,"name":"watchOS","beta":false}],"roleHeading":"Instance Method","title":"connect(cleanSession:will:connectConfiguration:)"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/org.swift-server-community.mqtt-nio\/documentation\/MQTTNIO\/MQTTClient\/connect(cleanSession:will:connectConfiguration:)-3ebau"},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"@discardableResult","kind":"attribute"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"connect"},{"kind":"text","text":"("},{"kind":"externalParam","text":"cleanSession"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":" = true, "},{"kind":"externalParam","text":"will"},{"kind":"text","text":": (topicName"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":", payload","kind":"text"},{"text":": ","kind":"text"},{"text":"ByteBuffer","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10ByteBufferV"},{"text":", qos","kind":"text"},{"kind":"text","text":": "},{"text":"MQTTQoS","identifier":"doc:\/\/org.swift-server-community.mqtt-nio\/documentation\/MQTTNIO\/MQTTQoS","preciseIdentifier":"s:7MQTTNIO7MQTTQoSO","kind":"typeIdentifier"},{"kind":"text","text":", retain"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":")? = nil, "},{"kind":"externalParam","text":"connectConfiguration"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7MQTTNIO10MQTTClientC20ConnectConfigurationV","identifier":"doc:\/\/org.swift-server-community.mqtt-nio\/documentation\/MQTTNIO\/MQTTClient\/ConnectConfiguration","text":"ConnectConfiguration"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"cleanSession","content":[{"inlineContent":[{"type":"text","text":"Should we start with a new session"}],"type":"paragraph"}]},{"name":"will","content":[{"inlineContent":[{"type":"text","text":"Publish message to be posted as soon as connection is made"}],"type":"paragraph"}]}]},{"kind":"content","content":[{"text":"Return Value","anchor":"return-value","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"EventLoopFuture to be updated with whether server holds a session for this client"}],"type":"paragraph"}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"If "},{"type":"codeVoice","code":"cleanSession"},{"text":" is set to false the Server MUST resume communications with the Client based on","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"state from the current Session (as identified by the Client identifier). If there is no Session"},{"text":" ","type":"text"},{"text":"associated with the Client identifier the Server MUST create a new Session. The Client and Server","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"MUST store the Session after the Client and Server are disconnected. If set to true then the Client"},{"type":"text","text":" "},{"text":"and Server MUST discard any previous Session and start a new one","type":"text"}],"type":"paragraph"}]}],"abstract":[{"text":"Connect to MQTT server","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/mqttnio\/mqttclient\/connect(cleansession:will:connectconfiguration:)-3ebau"]}],"hierarchy":{"paths":[["doc:\/\/org.swift-server-community.mqtt-nio\/documentation\/MQTTNIO","doc:\/\/org.swift-server-community.mqtt-nio\/documentation\/MQTTNIO\/MQTTClient"]]},"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://org.swift-server-community.mqtt-nio/documentation/MQTTNIO/MQTTClient":{"title":"MQTTClient","identifier":"doc:\/\/org.swift-server-community.mqtt-nio\/documentation\/MQTTNIO\/MQTTClient","role":"symbol","abstract":[{"text":"Swift NIO MQTT Client","type":"text"}],"url":"\/documentation\/mqttnio\/mqttclient","navigatorTitle":[{"text":"MQTTClient","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"MQTTClient","kind":"identifier"}],"type":"topic"},"doc://org.swift-server-community.mqtt-nio/documentation/MQTTNIO":{"url":"\/documentation\/mqttnio","role":"collection","title":"MQTTNIO","abstract":[{"type":"text","text":"A Swift NIO based MQTT client"}],"identifier":"doc:\/\/org.swift-server-community.mqtt-nio\/documentation\/MQTTNIO","kind":"symbol","type":"topic"},"doc://org.swift-server-community.mqtt-nio/documentation/MQTTNIO/MQTTClient/connect(cleanSession:will:connectConfiguration:)-3ebau":{"identifier":"doc:\/\/org.swift-server-community.mqtt-nio\/documentation\/MQTTNIO\/MQTTClient\/connect(cleanSession:will:connectConfiguration:)-3ebau","url":"\/documentation\/mqttnio\/mqttclient\/connect(cleansession:will:connectconfiguration:)-3ebau","title":"connect(cleanSession:will:connectConfiguration:)","abstract":[{"text":"Connect to MQTT server","type":"text"}],"kind":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"connect","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"cleanSession"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":", ","kind":"text"},{"text":"will","kind":"externalParam"},{"text":": (topicName","kind":"text"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":", payload","kind":"text"},{"text":": ","kind":"text"},{"text":"ByteBuffer","preciseIdentifier":"s:7NIOCore10ByteBufferV","kind":"typeIdentifier"},{"kind":"text","text":", qos"},{"text":": ","kind":"text"},{"text":"MQTTQoS","kind":"typeIdentifier","preciseIdentifier":"s:7MQTTNIO7MQTTQoSO"},{"text":", retain","kind":"text"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":")?, "},{"text":"connectConfiguration","kind":"externalParam"},{"kind":"text","text":": "},{"text":"ConnectConfiguration","preciseIdentifier":"s:7MQTTNIO10MQTTClientC20ConnectConfigurationV","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"role":"symbol"},"doc://org.swift-server-community.mqtt-nio/documentation/MQTTNIO/MQTTClient/ConnectConfiguration":{"type":"topic","url":"\/documentation\/mqttnio\/mqttclient\/connectconfiguration","identifier":"doc:\/\/org.swift-server-community.mqtt-nio\/documentation\/MQTTNIO\/MQTTClient\/ConnectConfiguration","title":"MQTTClient.ConnectConfiguration","role":"symbol","kind":"symbol","abstract":[{"text":"Configuration used at connection time to override values stored in the MQTTClient.Configuration","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"ConnectConfiguration"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ConnectConfiguration"}]},"doc://org.swift-server-community.mqtt-nio/documentation/MQTTNIO/MQTTQoS":{"url":"\/documentation\/mqttnio\/mqttqos","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MQTTQoS","kind":"identifier"}],"identifier":"doc:\/\/org.swift-server-community.mqtt-nio\/documentation\/MQTTNIO\/MQTTQoS","kind":"symbol","title":"MQTTQoS","navigatorTitle":[{"kind":"identifier","text":"MQTTQoS"}],"role":"symbol","type":"topic","abstract":[{"type":"text","text":"Indicates the level of assurance for delivery of a packet."}]}}}